---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import PageHeader from '@components/PageHeader.astro'
import { Card, Pagination } from 'accessible-astro-components'
import { getCollection } from 'astro:content'
import type { GetStaticPaths, Page } from 'astro'
import type { CollectionEntry } from 'astro:content'

export const getStaticPaths = (async ({ paginate }) => {
  let projects = await getCollection('projects')

  // Filter out items with missing or invalid dates
  projects = projects.filter((p) => {
    const date = new Date(p.data.projectDate)
    return !isNaN(date.getTime())
  })

  // Sort by projectDate descending (newest first)
  projects.sort((a, b) => {
    const dateA = new Date(a.data.projectDate)
    const dateB = new Date(b.data.projectDate)
    return dateB.getTime() - dateA.getTime()
  })

  // Attach heroImage from frontmatter
  const projectsWithImages = projects.map((project) => ({
    ...project,
    featuredImage: project.data.heroImage || undefined,
  }))

  // Paginate sorted projects (6 per page)
  return paginate(projectsWithImages, { pageSize: 6 })
}) satisfies GetStaticPaths

interface Props {
  page: Page<CollectionEntry<'projects'> & { featuredImage?: any }>
}

const { page } = Astro.props
---

<DefaultLayout
  title="Project Portfolio"
  description="A showcase of projects built with Astro Content Collections, demonstrating dynamic content management."
>
  <PageHeader
    title="Project Portfolio"
    subtitle="This is a collection of some of my most recent projects."
    bgType="bordered"
  />

  <section class="my-12">
    <div class="container">
      <!-- Uncomment for debugging -->
      <!-- <pre>{JSON.stringify(page.data.map(p => p.data.projectDate), null, 2)}</pre> -->

      <ul class="my-3 grid grid-cols-1 gap-6 md:grid-cols-2 lg:grid-cols-3">
        {
          page.data.map((project) => (
            <li>
              <Card
                imageComponent={project.featuredImage}
                url={`/portfolio/${project.id}`}
                title={project.data.title}
                footer={`Author: ${project.data.author || 'Unknown'}`}
              >
                {project.data.description}
              </Card>
            </li>
          ))
        }
      </ul>

      <div class="mt-12 grid place-content-center">
        <Pagination
          firstPage={page.url.prev ? '/portfolio' : null}
          previousPage={page.url.prev || null}
          nextPage={page.url.next || null}
          lastPage={page.url.next ? `/portfolio/${Math.ceil(page.total / page.size)}` : null}
          currentPage={`${page.currentPage}`}
          totalPages={`${Math.ceil(page.total / page.size)}`}
          ariaLabel="Portfolio pagination"
        />
      </div>
    </div>
  </section>
</DefaultLayout>

<style lang="scss" is:global>
  @use '../../assets/scss/base/mixins' as *;

  .card {
    h3 {
      margin-block-end: var(--space-xs);
      line-height: 0.75;
    }

    a {
      @include text-decoration(transparent, var(--foreground-color), 4px, 2px);
    }
  }
</style>
