---
import DefaultLayout from '@layouts/DefaultLayout.astro'
import PageHeader from '@components/PageHeader.astro'
import ExternalLink from '@components/ExternalLink.astro'

const formAction = "https://usebasin.com/f/afff98f360f7";
---

<DefaultLayout title="Contact Me" description="Get in touch with me for freelance work, collaborations, or any inquiries. I look forward to hearing from you!">
  <PageHeader title="Contact Me" bgType="bordered" />
  <section class="narrow container my-16">
    <div class="space-content">
      <p class="text-2xl">
        Want to work with me? Have a question or just want to say hi? Fill out the form below and I'll get back to you as soon as possible!
      </p>
      <p>
        Alternatively, please feel free to connect with me on <ExternalLink href="https://www.linkedin.com/in/bryson-best/">LinkedIn</ExternalLink>.
      </p>
    </div>
    <div class="space-content">
        
      <form 
        action={formAction}
        method="POST" 
        enctype="multipart/form-data" 
        id="contact-form" 
        class="space-y-6 bg-white p-8 rounded-lg shadow-md"
      >
        <div>
          <label for="name" class="block font-semibold mb-1">Name</label> 
          <input type="text" name="name" id="name" required />
        </div>
        <div>
          <label for="email" class="block font-semibold mb-1">Email</label>
          <input type="email" name="email" id="email" required />
        </div>
        <div>
          <label for="message" class="block font-semibold mb-1">Message</label>
          <textarea name="message" id="message" rows="5" required></textarea>
        </div>

        <!-- Google reCAPTCHA v3 integration -->
        <input type="hidden" name="g-recaptcha-response" id="g-recaptcha-response" />

        <div>
          <button type="submit" class="bg-primary-600 text-white px-6 py-2 rounded hover:bg-primary-700 transition">Send</button>
        </div>
      </form>

      <!-- reCAPTCHA script -->
      <script is:inline>
        if (!document.getElementById('recaptcha-script')) {
          const script = document.createElement('script');
          script.id = 'recaptcha-script';
          script.src = 'https://www.google.com/recaptcha/api.js?render=6Lf_G2ErAAAAAGEyrw2BVHSA_vdq8bFl68RSP0Vq';
          script.async = true;
          script.defer = true;
          document.body.appendChild(script);
        }
      </script>
      <script is:inline>
        // Hardcoded backend URL and reCAPTCHA site key
        const backendUrl = "https://brysonbest.netlify.app";
        const recaptchaSiteKey = "6Lf_G2ErAAAAAGEyrw2BVHSA_vdq8bFl68RSP0Vq";
        document.addEventListener("DOMContentLoaded", function () {
          const form = document.getElementById("contact-form");
          if (!form) return;

          form.addEventListener("submit", function (e) {
            e.preventDefault();
            function submitWithRecaptcha() {
              if (typeof grecaptcha !== "undefined") {
                grecaptcha.ready(function () {
                  grecaptcha.execute(recaptchaSiteKey, { action: "submit" }).then(function (token) {
                    const recaptchaInput = document.getElementById("g-recaptcha-response");
                    if (recaptchaInput) {
                      recaptchaInput.value = token;
                      // check if the token is valid
                      fetch(`${backendUrl}/.netlify/functions/verify-recaptcha`, {
                        method: 'POST',
                        headers: { 'Content-Type': 'application/json' },
                        body: JSON.stringify({
                          'g-recaptcha-response': token,
                          'name': form.name.value,
                          'email': form.email.value,
                          'message': form.message.value
                        })
                      })
                      .then(response => {
                        if (response.ok) {
                          form.submit();
                        } else {
                          alert("Failed to send message. Please try again.");
                        }
                      })
                      .catch(error => {
                        console.error("Error submitting form:", error);
                        alert("An error occurred. Please try again later.");
                      });
                    } else {
                      console.error("Recaptcha input not found");
                      alert("An error occurred. Please try again later.");
                      return;
                    }
                  });
                });
              } else {
                setTimeout(submitWithRecaptcha, 100); // Wait for script to load
              }
            }
            submitWithRecaptcha();
          });
        });
      </script>
    </div>
  </section>

  <style lang="scss">
    .narrow.container {
      max-width: 600px;
    }
    form {
      background: var(--background-color);
      border-radius: 1rem;
      box-shadow: 0 2px 16px 0 rgba(0,0,0,0.06);
      color: var(--foreground-color);
      transition: background 0.2s, color 0.2s;
    }
    label {
      font-weight: 600;
      color: var(--foreground-color);
    }
    input, textarea {
      margin-top: 0.25rem;
      margin-bottom: 0.5rem;
      border: 1px solid var(--border-color-subtle);
      border-radius: 0.375rem;
      padding: 0.5rem 0.75rem;
      width: 100%;
      font-size: 1rem;
      background: var(--background-color);
      color: var(--foreground-color);
      transition: background 0.2s, color 0.2s, border-color 0.2s;
    }
    input:focus, textarea:focus {
      border-color: var(--color-primary-400);
      outline: 2px solid var(--color-primary-400);
      background: var(--color-primary-100);
      color: var(--foreground-color);
    }
    button[type="submit"] {
      background: var(--color-primary-400);
      color: var(--color-neutral-100);
      font-weight: 600;
      border: none;
      border-radius: 0.375rem;
      padding: 0.75rem 2rem;
      cursor: pointer;
      transition: background 0.2s, color 0.2s;
    }
    button[type="submit"]:hover {
      background: var(--color-primary-300);
      color: var(--color-neutral-900);
    }
    // Dark mode overrides
    .darkmode form {
      background: var(--color-neutral-900);
      color: var(--color-neutral-100);
    }
    .darkmode label {
      color: var(--color-neutral-100);
    }
    .darkmode input, .darkmode textarea {
      background: var(--color-neutral-800);
      color: var(--color-neutral-100);
      border-color: var(--color-neutral-700);
    }
    .darkmode input:focus, .darkmode textarea:focus {
      border-color: var(--color-primary-200);
      outline: 2px solid var(--color-primary-200);
      background: var(--color-neutral-700);
      color: var(--color-neutral-100);
    }
    .darkmode button[type="submit"] {
      background: var(--color-primary-200);
      color: var(--color-neutral-900);
    }
    .darkmode button[type="submit"]:hover {
      background: var(--color-primary-100);
      color: var(--color-neutral-900);
    }
  </style>
</DefaultLayout>
